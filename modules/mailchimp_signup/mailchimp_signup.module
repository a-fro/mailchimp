<?php

/**
 * @file
 * Creates signup forms integrated with MailChimp.
 */

use \Drupal\mailchimp_signup\Entity\MailchimpSignup;

define('MAILCHIMP_SIGNUP_BLOCK', 1);
define('MAILCHIMP_SIGNUP_PAGE', 2);
define('MAILCHIMP_SIGNUP_BOTH', 3);

/**
 * Loads a single MailchimpSignup entity by ID.
 *
 * @param int $signup_id
 *   The ID of the MailchimpSignup entity to load.
 *
 * @return \Drupal\mailchimp_signup\Entity\MailchimpSignup
 *   The MailchimpSignup entity.
 */
function mailchimp_signup_load($signup_id) {
  return MailchimpSignup::load($signup_id);
}

/**
 * Loads multiple MailchimpSignup entities.
 *
 * @param array $signup_ids
 *   Array of MailchimpSignup entity IDs to load.
 * @param bool $reset
 *   TRUE to reset cache when loading MailchimpSignup entities.
 *
 * @return \Drupal\mailchimp_signup\Entity\MailchimpSignup[]
 *   Array of MailchimpSignup entities.
 */
function mailchimp_signup_load_multiple($signup_ids = array(), $reset = FALSE) {
  if (empty($signup_ids)) {
    $signup_ids = NULL;
  }

  $controller = \Drupal::entityManager()->getStorage('mailchimp_signup');

  if ($reset) {
    $controller->resetCache($signup_ids);
  }

  return $controller->loadMultiple($signup_ids);
}

/**
 * Validation handler for mailchimp_signup_subscribe_form.
 */

// TODO: Move into MailchimpSignupPageForm.

function mailchimp_signup_subscribe_form_validate($form, &$form_state) {
  $signup = reset($form_state['build_info']['args']);
  if (count($signup->mc_lists) > 1) {
    foreach ($form_state['values']['mailchimp_lists'] as $list) {
      if ($list['subscribe']) {
        return;
      }
    }
    form_set_error('mailchimp_lists', t("Please select at least one list to subscribe to."));
  }
}
