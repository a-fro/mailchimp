<?php

/**
 * @file
 * Mailchimp Signup module. Allows creation of signup forms integrated with
 * Mailchimp.
 */

use \Drupal\mailchimp_signup\Entity\MailchimpSignup;

define('MAILCHIMP_SIGNUP_BLOCK', 1);
define('MAILCHIMP_SIGNUP_PAGE', 2);
define('MAILCHIMP_SIGNUP_BOTH', 3);

/**
 * Wrapper around mailchimp_signup_load_multiple to load a single signup entity.
 */
function mailchimp_signup_load($signup_id) {
  return MailchimpSignup::load($signup_id);
}

/**
 * Loads multiple signup forms.
 */
function mailchimp_signup_load_multiple($signup_ids = array(), $conditions = array(), $reset = FALSE) {
  if (empty($signup_ids)) {
    $signup_ids = NULL;
  }

  $controller = \Drupal::entityManager()->getStorage('mailchimp_signup');

  if ($reset) {
    $controller->resetCache($signup_ids);
  }

  return $controller->loadMultiple($signup_ids);
}

/**
 * Deletes multiple signups by ID.
 *
 * @param array $signup_ids
 *   An array of signup IDs to delete.
 *
 * @return bool
 *   TRUE on success, FALSE otherwise.
 */
function mailchimp_signup_delete_multiple($signup_ids) {
  return entity_get_controller('mailchimp_signup')->delete($signup_ids);
}

/**
 * Validation handler for mailchimp_signup_subscribe_form.
 */

// TODO: Move into MailchimpSignupPageForm.

function mailchimp_signup_subscribe_form_validate($form, &$form_state) {
  $signup = reset($form_state['build_info']['args']);
  if (count($signup->mc_lists) > 1) {
    foreach ($form_state['values']['mailchimp_lists'] as $list) {
      if ($list['subscribe']) {
        return;
      }
    }
    form_set_error('mailchimp_lists', t("Please select at least one list to subscribe to."));
  }
}
